Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.

# Definition for a  binary tree node
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    # @param root, a tree node
    # @return an integer
    def minDepth(self, root):
        if root == None:
            return 0
            
        currentlevel = [root]
        height = 1
        while currentlevel != []:
            nextlevel = []
            for node in currentlevel:
                if node.left == None and node.right == None:
                    return height
                    
                if node.left != None:
                    nextlevel.append(node.left)
                if node.right != None:
                    nextlevel.append(node.right)
            
            currentlevel = nextlevel
            height += 1
