Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
    
class Solution:
    # @return an integer
    def threeSumClosest(self, num, target):
        
        num.sort()
        
        n = len(num)
        res = num[0] + num[1] + num[2]
        
        for i in range(n - 2):
            left = i + 1
            right = n - 1
            
            if i > 0 and num[i] == num[i - 1]:
                continue
            
            while left < right:
                newval = num[i] + num[left] + num[right]
                
                if newval == target:
                    return target
                    
                elif newval < target:
                    if abs(newval - target) < abs(res - target):
                        res = newval
                    key = num[left]
                    left += 1
                    while left < right and num[left] == key:
                        left += 1
                            
                else:
                    if abs(newval - target) < abs(res - target):
                        res = newval
                    key = num[right]
                    right -= 1
                    while left < right and num[right] == key:
                        right -= 1
                            
        return res
