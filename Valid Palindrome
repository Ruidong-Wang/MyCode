Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.

For example,
"A man, a plan, a canal: Panama" is a palindrome.
"race a car" is not a palindrome.

Note:
Have you consider that the string might be empty? This is a good question to ask during an interview.

For the purpose of this problem, we define empty string as valid palindrome.

O(n) runtime, O(1) space:

The idea is simple, have two pointers â€“ one at the head while the other one at the tail. Move them towards each other until they meet while skipping non-alphanumeric characters.

class Solution:
    # @param s, a string
    # @return a boolean
    def isPalindrome(self, s):
        t = "qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890"
        i = 0
        j = len(s)-1
        while i < j:
            while s[i] not in t and i < j:
                i = i + 1
                if i == j:
                    return True
            while s[j] not in t and i < j:
                j = j - 1
                if i == j:
                    return True
            if s[i].upper() != s[j].upper():
                return False
            else:
                i = i + 1
                j = j - 1
        return True
