Rotate an array of n elements to the right by k steps.

For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4].

Note:
Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.

Hint:
Could you do it in-place with O(1) extra space?

class Solution:
    # @param nums, a list of integer
    # @param k, num of steps
    # @return nothing, please modify the nums list in-place.
    def rotate(self, nums, k):
        # idea is to reverse three times

        k = k % len(nums)
        if k != 0:
            nums.reverse()

            if k > 1:
                for i in range(k//2):
                    a = nums[i]
                    nums[i] = nums[k-1-i]
                    nums[k-1-i] = a
        
            if len(nums) - k > 1:
                for i in range((len(nums)-k)//2):
                    a = nums[i+k]
                    nums[i+k] = nums[-i-1]
                    nums[-i-1] = a
            
