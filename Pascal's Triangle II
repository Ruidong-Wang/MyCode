Given an index k, return the kth row of the Pascal's triangle.

For example, given k = 3,
Return [1,3,3,1].

Note:
Could you optimize your algorithm to use only O(k) extra space?

class Solution:
    # @return a list of integers
    def getRow(self, n):
        A = [1 for j in range(n+1)]
        # return A
        B = [1 for j in range(n+1)]
        # B is for copy
        
        if n == 0 or n == 1:
            return A
            
        for i in range(2,n+1):
            for k in range(i):
                B[k] = A[k]
            # copy to B, they modify A
            
            for k in range(1,i):
                A[k] = B[k-1] + B[k]
            
        return A
