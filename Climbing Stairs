You are climbing a stair case. It takes n steps to reach to the top.

Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?

class Solution:
    # @param n, an integer
    # @return an integer
    # f_n = f_n-1 + f_n-2
    
    def climbStairs(self, n):
        if n <= 0:
            return 0
        if n == 1:
            return 1
        if n == 2:
            return 2
        pre = 1
        fn = 2
        for i in range(3,n+1):
            temp = fn
            fn = pre + fn
            pre = temp
            
        return fn
            




    def climbStairs(self, n):
        if n <= 0:
            return 0
        if n == 1:
            return 1
        val = (5**0.5) / 5 * ((1 + 5**0.5) / 2)**(n + 1)\
            - (5**0.5) / 5 * ((1 - 5**0.5) / 2)**(n + 1)
        return int(val + 0.5)
        
